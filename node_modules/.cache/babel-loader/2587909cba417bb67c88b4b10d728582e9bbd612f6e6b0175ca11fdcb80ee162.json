{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nconst BASE_API = 'https://fakestoreapi.com/products';\nconst func = a => {\n  return a + a;\n};\nfunc(5);\nexport const getProductsFromCategories = createAsyncThunk('category/fetchProductFromCategories', async category => {\n  try {\n    const {\n      data\n    } = await axios.get(category === 'all' ? BASE_API : BASE_API + `/category/${category}`);\n    return data;\n  } catch (e) {\n    console.log('error', e);\n  }\n});\nvar Status = /*#__PURE__*/function (Status) {\n  Status[\"LOADING\"] = \"loading\";\n  Status[\"SUCCESS\"] = \"success\";\n  Status[\"ERROR\"] = \"error\";\n  return Status;\n}(Status || {});\nconst initialState = {\n  items: [],\n  searchItems: '',\n  status: Status.LOADING\n};\nconst productsSlice = createSlice({\n  name: 'items',\n  initialState,\n  reducers: {\n    setSearchWord: (state, action) => {\n      state.searchItems = action.payload;\n    },\n    getSearchProducts: (state, action) => {\n      state.items = state.items.filter(item => item.title.toLowerCase().includes(action.payload.toLowerCase()));\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getProductsFromCategories.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    }).addCase(getProductsFromCategories.rejected, (state, action) => {\n      state.status = Status.ERROR;\n    }).addCase(getProductsFromCategories.pending, (state, action) => {\n      state.status = Status.LOADING;\n    });\n  }\n});\nexport const {\n  getSearchProducts,\n  setSearchWord\n} = productsSlice.actions;\nexport default productsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","BASE_API","func","a","getProductsFromCategories","category","data","get","e","console","log","Status","initialState","items","searchItems","status","LOADING","productsSlice","name","reducers","setSearchWord","state","action","payload","getSearchProducts","filter","item","title","toLowerCase","includes","extraReducers","builder","addCase","fulfilled","SUCCESS","rejected","ERROR","pending","actions","reducer"],"sources":["/Users/meredova_o/Desktop/Frontcat/Урок 73. Продолжаем типизацию/project/src/redux/slices/productsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\nconst BASE_API = 'https://fakestoreapi.com/products'\n\nconst func = <T>(a:number):number => {\n    return a+a\n}\nfunc(5)\n\n\nexport const getProductsFromCategories = createAsyncThunk(\n    'category/fetchProductFromCategories',\n    async (category:string) => {\n        try {\n            const {data} = await axios.get(\n                category === 'all' ?\n                BASE_API \n                :\n                BASE_API + `/category/${category}`)\n            return data\n        }\n        catch(e) {\n            console.log('error', e)\n        }\n    }\n)\n\nenum Status {\n    LOADING = 'loading',\n    SUCCESS = 'success',\n    ERROR = 'error',\n}\n\ntype TItems = {\n    id:number,\n    title:string,\n    price:string,\n    category:string,\n    descriprion:string,\n    image:string,\n}\n\ntype TInitialState = {\n    items:TItems[],\n    searchItems:string,\n    status:Status\n}\n\nconst initialState: TInitialState = {\n    items: [],\n    searchItems: '',\n    status:Status.LOADING\n}\n\nconst productsSlice = createSlice({\n    name: 'items',\n    initialState,\n    reducers: {\n        setSearchWord: (state, action) => {\n            state.searchItems = action.payload\n        },\n        getSearchProducts: (state, action) => {\n            state.items = state.items.filter(item => item.title.toLowerCase().includes(action.payload.toLowerCase()))\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        .addCase(getProductsFromCategories.fulfilled, (state, action) => {\n            state.items = action.payload\n            state.status = Status.SUCCESS\n        })\n        .addCase(getProductsFromCategories.rejected, (state, action) => {\n            state.status = Status.ERROR\n        })\n        .addCase(getProductsFromCategories.pending, (state, action) => {\n            state.status = Status.LOADING\n        })\n    }\n})\n\nexport const { getSearchProducts, setSearchWord } = productsSlice.actions\n\nexport default productsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,mCAAmC;AAEpD,MAAMC,IAAI,GAAOC,CAAQ,IAAY;EACjC,OAAOA,CAAC,GAACA,CAAC;AACd,CAAC;AACDD,IAAI,CAAC,CAAC,CAAC;AAGP,OAAO,MAAME,yBAAyB,GAAGL,gBAAgB,CACrD,qCAAqC,EACrC,MAAOM,QAAe,IAAK;EACvB,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAG,MAAMN,KAAK,CAACO,GAAG,CAC1BF,QAAQ,KAAK,KAAK,GAClBJ,QAAQ,GAERA,QAAQ,GAAI,aAAYI,QAAS,EAAC,CAAC;IACvC,OAAOC,IAAI;EACf,CAAC,CACD,OAAME,CAAC,EAAE;IACLC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC;EAC3B;AACJ,CACJ,CAAC;AAAA,IAEIG,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA,EAANA,MAAM;AAqBX,MAAMC,YAA2B,GAAG;EAChCC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,MAAM,EAACJ,MAAM,CAACK;AAClB,CAAC;AAED,MAAMC,aAAa,GAAGnB,WAAW,CAAC;EAC9BoB,IAAI,EAAE,OAAO;EACbN,YAAY;EACZO,QAAQ,EAAE;IACNC,aAAa,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACP,WAAW,GAAGQ,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,iBAAiB,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACP,MAAM,CAACC,OAAO,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;IAC7G;EACJ,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACNC,OAAO,CAAC5B,yBAAyB,CAAC6B,SAAS,EAAE,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACN,MAAM,GAAGJ,MAAM,CAACuB,OAAO;IACjC,CAAC,CAAC,CACDF,OAAO,CAAC5B,yBAAyB,CAAC+B,QAAQ,EAAE,CAACd,KAAK,EAAEC,MAAM,KAAK;MAC5DD,KAAK,CAACN,MAAM,GAAGJ,MAAM,CAACyB,KAAK;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAAC5B,yBAAyB,CAACiC,OAAO,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK;MAC3DD,KAAK,CAACN,MAAM,GAAGJ,MAAM,CAACK,OAAO;IACjC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ,iBAAiB;EAAEJ;AAAc,CAAC,GAAGH,aAAa,CAACqB,OAAO;AAEzE,eAAerB,aAAa,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}