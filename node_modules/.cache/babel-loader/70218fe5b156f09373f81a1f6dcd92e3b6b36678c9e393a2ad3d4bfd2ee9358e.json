{"ast":null,"code":"import { createSlice, createAsyncThunk, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const getCategories = createAsyncThunk('category/fetchCategories', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('https://fakestoreapi.com/products/categories');\n    return data;\n  } catch (e) {\n    console.log('error', e);\n    return isRejectedWithValue;\n  }\n});\nconst initialState = {\n  items: [],\n  selectedCategory: 'all'\n};\nconst categoriesSlice = createSlice({\n  name: 'categories',\n  initialState,\n  reducers: {\n    setSelectedCategory: (state, action) => {\n      state.selectedCategory = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getCategories.fulfilled, (state, action) => {\n      state.items = action.payload;\n    });\n  }\n});\nexport const {\n  setSelectedCategory\n} = categoriesSlice.actions;\nexport default categoriesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","isRejectedWithValue","axios","getCategories","data","get","e","console","log","initialState","items","selectedCategory","categoriesSlice","name","reducers","setSelectedCategory","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["/Users/meredova_o/Desktop/Frontcat/Урок 73. Продолжаем типизацию/project/src/redux/slices/categoriesSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, isRejectedWithValue } from \"@reduxjs/toolkit\";\nimport axios, { AxiosResponse } from 'axios'\n\nexport const getCategories = createAsyncThunk<string[], string, { rejectValue: string }>(\n    'category/fetchCategories',\n    async () => {\n        try {\n            const {data} = await axios.get<AxiosResponse<string[]>>('https://fakestoreapi.com/products/categories')\n            return data\n        }\n        catch(e) {\n            console.log('error', e)\n            return isRejectedWithValue\n        }\n    }\n)\n\ntype TInitialState = {\n    items?:string[],\n    selectedCategory:string\n}\n\nconst initialState: TInitialState = {\n    items: [],\n    selectedCategory: 'all',\n}\n\nconst categoriesSlice = createSlice({\n    name: 'categories',\n    initialState,\n    reducers: {\n        setSelectedCategory: (state, action) => {\n            state.selectedCategory = action.payload\n        }\n    },\n    extraReducers: (builder) => {\n        builder.addCase(getCategories.fulfilled, (state, action) => {\n            state.items = action.payload\n        })\n    }\n})\n\nexport const { setSelectedCategory } = categoriesSlice.actions\n\nexport default categoriesSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,EAAEC,mBAAmB,QAAQ,kBAAkB;AACrF,OAAOC,KAAK,MAAyB,OAAO;AAE5C,OAAO,MAAMC,aAAa,GAAGH,gBAAgB,CACzC,0BAA0B,EAC1B,YAAY;EACR,IAAI;IACA,MAAM;MAACI;IAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAA0B,8CAA8C,CAAC;IACvG,OAAOD,IAAI;EACf,CAAC,CACD,OAAME,CAAC,EAAE;IACLC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,CAAC,CAAC;IACvB,OAAOL,mBAAmB;EAC9B;AACJ,CACJ,CAAC;AAOD,MAAMQ,YAA2B,GAAG;EAChCC,KAAK,EAAE,EAAE;EACTC,gBAAgB,EAAE;AACtB,CAAC;AAED,MAAMC,eAAe,GAAGb,WAAW,CAAC;EAChCc,IAAI,EAAE,YAAY;EAClBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,mBAAmB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACL,gBAAgB,GAAGM,MAAM,CAACC,OAAO;IAC3C;EACJ,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CAACC,OAAO,CAAClB,aAAa,CAACmB,SAAS,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACxDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAoB,CAAC,GAAGH,eAAe,CAACW,OAAO;AAE9D,eAAeX,eAAe,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}